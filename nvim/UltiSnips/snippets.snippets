# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet snip "Snippet" b
`!p snip.rv = "snippet"` ${1:Trigger} "${2:Description}" ${3:b}
${0:${VISUAL}}
`!p snip.rv = "endsnippet"`
endsnippet

snippet global "Global snippet" b
`!p snip.rv = "global"` !p
${0:${VISUAL}}
`!p snip.rv = "endglobal"`
endsnippet

# snippet ph "Placeholder" i
# \$\{${1:1}${2::${3:${4:default}/${5:search}/${6:replace}/${7}}}\}
# endsnippet

# snippet vis "Visual Placeholder" i
# \$\{VISUAL${1::${2:${3:default}/${4:search}/${5:replace}/${6}}}\}
# endsnippet

snippet $ "Placeholder" i
\${${1:1}${2::${3:default}}}
endsnippet

snippet $t "Transformation" i
\${${1:1}${2:/${3:search}/${4:replace}/$5}}
endsnippet

snippet $v "Visual Placeholder" i
\${VISUAL${1:/${2:search}/${3:replace}/$4}}
endsnippet

snippet doc "Snippets documentation" b
# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly \${1} = new Emitter<\$2>()
#		public readonly \${1/^_(.*)/\$1/}: Event<\$2> = this.\$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

endsnippet
